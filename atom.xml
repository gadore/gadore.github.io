<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Gadore</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://gadore.me/"/>
  <updated>2020-02-15T10:27:55.561Z</updated>
  <id>https://gadore.me/</id>
  
  <author>
    <name>gadore</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>自动化分拣设备监控</title>
    <link href="https://gadore.me/2020/02/15/webMonitor/"/>
    <id>https://gadore.me/2020/02/15/webMonitor/</id>
    <published>2020-02-15T10:09:54.000Z</published>
    <updated>2020-02-15T10:27:55.561Z</updated>
    
    <content type="html"><![CDATA[<h1 id="欣巴WEB监控客户端说明手册"><a href="#欣巴WEB监控客户端说明手册" class="headerlink" title="欣巴WEB监控客户端说明手册"></a>欣巴WEB监控客户端说明手册</h1><blockquote><p>版本号：V 0.0.1</p></blockquote><h2 id="概要："><a href="#概要：" class="headerlink" title="概要："></a>概要：</h2><p>随着快递行业自动化快速铺展，自动化组建的信息化、状态透明化的需求也在不断被强调。</p><p>Web监控系统正是建立在这一需求之下的。</p><p>系统使用了前后端分离的开发方式、并使用webpack对项目体积进行优化打包，进而使得前台系统可以使用浏览器（Chrome）很快载入页面。</p><p>系统信息使用websocket这一传递方式，在低网络占用的前提下，提供了一个清晰、实时的状态监控平台，帮助用户在平时设备运转时，及时关注到系统的各个方面的组件运行状态，同时又不用多次发起http请求，对客户机的配置要求进一步降低。</p><blockquote><p>开发语言：html、css、js</p></blockquote><blockquote><p>框架：VUE</p></blockquote><blockquote><p>元素套件：Vuetify</p></blockquote><blockquote><p>运行环境：浏览器，ChromeV76及以上版本</p></blockquote><blockquote><p>开发工具：VS Code</p></blockquote><blockquote><p>技术涉及：websocket、webpack、vuex</p></blockquote><h2 id="一、登录与账户权限"><a href="#一、登录与账户权限" class="headerlink" title="一、登录与账户权限"></a>一、登录与账户权限</h2><p><img src="http://server.gadore.me:5678/webMonitor/2.png" alt="登录界面"><br>本系统设定简单的权限系统，当前预设两种账号类型：管理员账号与普通员工账号</p><h3 id="1-管理员账号拥有系统所有功能的查看权"><a href="#1-管理员账号拥有系统所有功能的查看权" class="headerlink" title="1. 管理员账号拥有系统所有功能的查看权"></a>1. 管理员账号拥有系统所有功能的查看权</h3><p>当使用<strong>admin</strong>账号登录成功后，加载操作菜单列表如下图左侧所示：<br><img src="http://server.gadore.me:5678/webMonitor/1.png" alt></p><h3 id="2-普通员工账号拥有系统部分功能的查看权"><a href="#2-普通员工账号拥有系统部分功能的查看权" class="headerlink" title="2. 普通员工账号拥有系统部分功能的查看权"></a>2. 普通员工账号拥有系统部分功能的查看权</h3><p>当使用<strong>10001</strong>账号登录成功后，加载操作菜单列表如下图左侧所示：</p><p><img src="http://server.gadore.me:5678/webMonitor/19.png" alt></p><p>另：根据不通场地的业务内容不同，菜单列表也会存在一定差异，以上图片仅供说明，最终场地功能菜单内容以场地实际业务内容为准。</p><h2 id="二、-货物运载托盘状态监控"><a href="#二、-货物运载托盘状态监控" class="headerlink" title="二、 货物运载托盘状态监控"></a>二、 货物运载托盘状态监控</h2><p>说明：货物运载托盘（即交叉带小车单元）主要显示托盘的在线、离线、异常等状态，同时小车上运载的货物的状态（如：未识别、无信息、空载等）也会在该页面进行监控。该页面主要有5个交互点：</p><p><img src="http://server.gadore.me:5678/webMonitor/42.png" alt></p><ol><li><p>考虑到各地区显示屏幕与小车数量不同，在左上角红色框线内有元素间隔调整，可以通过该按钮对<strong>3</strong>区域的显示内容进行简单的调整。同时，部分地区交叉带存在多层小车情况，也可以在该处使用层选择器进行选择。</p></li><li><p>2处的按钮主要控制下方显示区的隐藏，<strong>4、5</strong>模块的存在会减小中心显示区的空间，所以在此处设置隐藏按钮，按一次隐藏，再按一次显示。</p></li><li><p>3区域是主显示区，点按该区域的具体元素后，系统会把点击小车的集体状态展示在4区域。</p></li><li><p>4区域显示鼠标点按后的元素的具体状态</p></li><li><p>5区域是对3区的颜色状态进行详细说明，方便监控人员了解各个颜色对应的状态。</p></li></ol><h2 id="三、-格口状态监控"><a href="#三、-格口状态监控" class="headerlink" title="三、 格口状态监控"></a>三、 格口状态监控</h2><p>说明：格口状态监控界面与小车监控布局类似，该界面主要展示格口的状态，以及格口的货物计数</p><p><img src="http://server.gadore.me:5678/webMonitor/5.png" alt></p><p>点击具体的格口元素，在左下方的显示区域也会持续显示该被点击格口的详细信息</p><h2 id="四、-交叉带组件监控"><a href="#四、-交叉带组件监控" class="headerlink" title="四、 交叉带组件监控"></a>四、 交叉带组件监控</h2><p>说明：交叉带组件包含供包台、电机、OBR相机灰度仪、急停点等多组件的监控。由于组件较多，所以设置了状态纵览和详细监控两种显示方式，实现了在有限区域实现多样化的监控方式</p><p><img src="http://server.gadore.me:5678/webMonitor/6.png" alt></p><ol><li><p>每个组件状态都有一个标题栏，标题栏会显示正常、异常、待机的组件数量，简单明了。</p></li><li><p>每个组件的标题栏点开之后都可以进行详细预览，以下为供包台的状态详细预览：</p></li></ol><p><img src="http://server.gadore.me:5678/webMonitor/7.png" alt></p><p>点击某一具体的组件，在展开的标题栏上会显示当前点击元素的具体状态，标题右侧也有颜色与状态的对照</p><ol start="3"><li>同时，也可以同时展开多个组件的具体状态，供包台、电机、急停点的详细监控展开后如下图</li></ol><p><img src="http://server.gadore.me:5678/webMonitor/12.png" alt></p><h2 id="五、-输送线监控（可选功能）"><a href="#五、-输送线监控（可选功能）" class="headerlink" title="五、 输送线监控（可选功能）"></a>五、 输送线监控（可选功能）</h2><p>在有输送线的场地，该系统也可对输送线的状态进行简单的监控。界面可以显示输送线的走向、输送线关键组件的具体情况</p><p><img src="http://server.gadore.me:5678/webMonitor/13.png" alt></p><p>在鼠标放在某一关键元素的上边时，该元素的状态会以提示的方式弹出，简单说明该处组建的健康状态。需要说明的是：该处的组件可与交叉带组件监控处显示的组件进行状态绑定，保持状态一致</p><h2 id="六、-日志记录"><a href="#六、-日志记录" class="headerlink" title="六、 日志记录"></a>六、 日志记录</h2><p><img src="http://server.gadore.me:5678/webMonitor/15.png" alt></p><p>日志记录主要是为了帮助管理员诊断监控端的运行情况，通过日志记录界面，在监控出现问题时，可通过日志记录了解后台的运行状况，快速定位问题。</p><h2 id="七、-反馈-amp-amp-帮助页"><a href="#七、-反馈-amp-amp-帮助页" class="headerlink" title="七、 反馈&amp;&amp;帮助页"></a>七、 反馈&amp;&amp;帮助页</h2><p><img src="http://server.gadore.me:5678/webMonitor/17.png" alt></p><p>该界面提供简单的问题反馈方式，帮助开发者与用户之间建立反馈交流途径，进而帮助系统进一步完善。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;欣巴WEB监控客户端说明手册&quot;&gt;&lt;a href=&quot;#欣巴WEB监控客户端说明手册&quot; class=&quot;headerlink&quot; title=&quot;欣巴WEB监控客户端说明手册&quot;&gt;&lt;/a&gt;欣巴WEB监控客户端说明手册&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;版本号：V 0.0
      
    
    </summary>
    
    
      <category term="Project" scheme="https://gadore.me/categories/Project/"/>
    
    
  </entry>
  
  <entry>
    <title>Termux</title>
    <link href="https://gadore.me/2020/01/30/Termux/"/>
    <id>https://gadore.me/2020/01/30/Termux/</id>
    <published>2020-01-30T08:39:28.000Z</published>
    <updated>2020-01-30T08:40:01.125Z</updated>
    
    <content type="html"><![CDATA[<p>Termux 高级终端安装使用配置教程,这篇文章拖了有小半年.因为网上相关的文章相对来说还是比较少的,恰好今天又刷了机,所以就特意来总结一下,希望本文可以帮助到其他的小伙伴.发挥Android平台更大的DIY空间.<br>简介<br>Termux是一个Android下一个高级的终端模拟器,开源且不需要root,支持apt管理软件包，十分方便安装软件包,完美支持Python,PHP,Ruby,Go,Nodejs,MySQL等。随着智能设备的普及和性能的不断提升，如今的手机、平板等的硬件标准已达到了初级桌面计算机的硬件标准,用心去打造完全可以把手机变成一个强大的工具.</p><p>官网<br>Github项目地址<br>Google Play下载地址<br>Google Play下载的版本比酷安要新,有能力建议下载Google PLay版本的.</p><p>基本操作<br>长按屏幕<br>显示菜单项（包括复制、粘贴、更多），此时屏幕出现可选择的复制光标</p><p>长按屏幕<br>├── COPY:复制<br>├── PASTE:更多<br>├── More:更多<br>   ├── Select URL: 选择网址<br>   └── Share transcipt: 分享命令脚本<br>   └── Reset: 重置<br>   └── Kill process: 杀掉当前终端会话进程<br>   └── Style: 风格配色<br>   └── Help: 帮助文档<br>从左向右滑动<br>显示隐藏式导航栏，可以新建、切换、重命名会话session和调用弹出输入法</p><p>显示扩展功能按键<br>扩展功能键是什么?就是PC端常用的按键如:ESC键，CTR键，TAB键,但是手机上难以操作的一些按键.</p><p>效果图</p><p>方法一<br>从左向右滑动,显示隐藏式导航栏,长按左下角的KEYBOARD.</p><p>方法二<br>使用Termux快捷键:音量++Q键</p><p>实用快捷键<br>Ctrl键是终端用户常用的按键 - 但大多数触摸键盘都没有这个按键。为此，Termux使用音量减小按钮来模拟Ctrl键。<br>例如，在触摸键盘上按音量减小+ L发送与在硬件键盘上按Ctrl + L相同的输入。</p><p>Ctrl+A -&gt; 将光标移动到行首<br>Ctrl+C -&gt; 中止当前进程<br>Ctrl+D -&gt; 注销终端会话<br>Ctrl+E -&gt; 将光标移动到行尾<br>Ctrl+K -&gt; 从光标删除到行尾<br>Ctrl+L -&gt; 清除终端<br>Ctrl+Z -&gt; 挂起（发送SIGTSTP到）当前进程<br>音量加键也可以作为产生特定输入的特殊键.</p><p>音量加+E -&gt; Esc键<br>音量加+T -&gt; Tab键<br>音量加+1 -&gt; F1（和音量增加+ 2→F2等）<br>音量加+0 -&gt; F10<br>音量加+B -&gt; Alt + B，使用readline时返回一个单词<br>音量加+F -&gt; Alt + F，使用readline时转发一个单词<br>音量加+X -&gt; Alt+X<br>音量加+W -&gt; 向上箭头键<br>音量加+A -&gt; 向左箭头键<br>音量加+S -&gt; 向下箭头键<br>音量加+D -&gt; 向右箭头键<br>音量加+L -&gt; | （管道字符）<br>音量加+H -&gt; 〜（波浪号字符）<br>音量加+U -&gt; _ (下划线字符)<br>音量加+P -&gt; 上一页<br>音量加+N -&gt; 下一页<br>音量加+. -&gt; Ctrl + \（SIGQUIT）<br>音量加+V -&gt; 显示音量控制<br>音量加+Q -&gt; 显示额外的按键视图<br>快速上手<br>基本命令<br>Termux除了支持apt命令外,还在此基础上封装了pkg命令,pkg命令向下兼容apt命令.apt命令大家应该都比较熟悉了,这里直接简单的介绍下pkg命令:</p><p>Bash<br>pkg search <query>              搜索包<br>pkg install <package>           安装包<br>pkg uninstall <package>         卸载包<br>pkg reinstall <package>         重新安装包<br>pkg update                      更新源<br>pkg upgrade                     升级软件包<br>pkg list-all                    列出可供安装的所有包<br>pkg list-installed              列出已经安装的包<br>pkg shoe <package>              显示某个包的详细信息<br>pkg files <package>             显示某个包的相关文件夹路径<br>目录环境结构<br>Bash<br>~ &gt; echo $HOME<br>/data/data/com.termux/files/home</package></package></package></package></package></query></p><p> ~ &gt; echo $PREFIX<br>/data/data/com.termux/files/usr</p><p> ~ &gt; echo $TMPPREFIX<br>/data/data/com.termux/files/usr/tmp/zsh<br>长期使用Linux的朋友可能会发现，这个HOME路径看上去可能不太一样,为了方便,Termux 提供了一个特殊的环境变量:PREFIX</p><p>更换国内源<br>更换Termux清华大学源,加快软件包下载速度.</p><p>设置默认编辑器</p><p>Bash<br>export EDITOR=vi<br>编辑源文件</p><p>Bash<br>apt edit-sources<br>将原来的<a href="https://termux.net官方源替换为http://mirrors.tuna.tsinghua.edu.cn/termux" target="_blank" rel="noopener">https://termux.net官方源替换为http://mirrors.tuna.tsinghua.edu.cn/termux</a></p><p>Bash</p><h1 id="The-termux-repository-mirror-from-TUNA"><a href="#The-termux-repository-mirror-from-TUNA" class="headerlink" title="The termux repository mirror from TUNA:"></a>The termux repository mirror from TUNA:</h1><p>deb <a href="https://mirrors.tuna.tsinghua.edu.cn/termux" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/termux</a> stable main保存并退出<br>直接编辑源文件</p><p>上面是官方推荐的方法,其实还有更简单的方法,类似于Linux下直接去编辑源文件:</p><p>Bash<br>vi  $PREFIX/etc/apt/sources.list<br>如果清华源 出一些问题的话，大家可以尝试先用着官方源：</p><p>Bash</p><h1 id="The-main-termux-repository"><a href="#The-main-termux-repository" class="headerlink" title="The main termux repository:"></a>The main termux repository:</h1><p>deb <a href="https://termux.org/packages/" target="_blank" rel="noopener">https://termux.org/packages/</a> stable main<br>安装基本工具<br>Bash<br>pkg update<br>pkg install vim curl wget git unzip unrar<br>Termux优化<br>终端配色<br>主要使用了zsh来替代bash作为默认shell.<br>使用一键安装脚本来安装,一步到位,顺便启动了外置存储,可以直接访问SD卡下的目录.</p><p>执行下面这个命令确保已经安装好了curl</p><p>Bash<br>sh -c “$(curl -fsSL <a href="https://github.com/Cabbagec/termux-ohmyzsh/raw/master/install.sh)&quot;" target="_blank" rel="noopener">https://github.com/Cabbagec/termux-ohmyzsh/raw/master/install.sh)&quot;</a>  </p><p>Android6.0以上会弹框确认是否授权,允许授权后Termux可以方便的访问SD卡文件.<br>脚本允许后先后有如下两个选项:<br>Enter a number, leave blank to not to change: 14<br>Enter a number, leave blank to not to change: 6<br>分别选择背景色和字体<br>想要继续更改挑选配色的话,继续运行脚本来再次筛选:</p><p>Bash<br>$ ~/termux-ohmyzsh/install.sh<br>exit重启sessions会话生效配置</p><p>访问外置存储优化<br>执行过上面的zsh一键配置脚本后,并且授予文件访问权限的话,会在家目录生成storage目录，并且生成若干目录，软连接都指向外置存储卡的相应目录</p><p>创建QQ文件夹软连接</p><p>手机上一般经常使用手机QQ来接收文件,这里为了方便文件传输,直接在storage目录下创建软链接.<br>QQ</p><p>Bash<br>ln -s /data/data/com.termux/files/home/storage/shared/tencent/QQfile_recv QQ<br>TIM</p><p>Bash<br>ln -s /data/data/com.termux/files/home/storage/shared/tencent/TIMfile_recv TIM<br>最后效果图如下:</p><p>这样可以直接在home目录下去访问QQ文件夹,非常方便文件的传输,大大提升了工作效率.<br><a href="http://mirrors.tuna.tsinghua.edu.cn/termux" target="_blank" rel="noopener">http://mirrors.tuna.tsinghua.edu.cn/termux</a><br>oh my zsh主题配色<br>编辑.zshrc配置文件</p><p>$ vim .zshrc<br>第一行可以看到,默认的主题是agnoster主题:</p><p>在.oh-my-zsh/themes目录下放着oh-my-zsh所有的主题配置文件.<br>下面是国光认为还不错的几款主题<br>agnoster</p><p>robbyrussell</p><p>jaischeema</p><p>re5et</p><p>junkfood</p><p>cloud</p><p>random</p><p>当然如果你是个变态的话,可以尝试random主题,每打开一个会话配色主题都是随机的.</p><p>Bash<br>ZSH_THEME=”random”<br>修改启动问候语<br>默认的启动问候语如下:</p><p>这个对于初学者有一定的帮助在前期,随着对Termux的熟悉,这个默认的问候语就会显得比较臃肿.<br>编辑问候语文件直接修改问候语:<br>Bash<br>vim $PREFIX/etc/motd<br>修改完的效果如下:</p><p>这样启动新的会话的时候看上去就会简洁很多.<br>管理员身份<br>手机没有root<br>利用proot工具来模拟某些需要root的环境</p><p>Bash<br>pkg install proot<br>然后终端下面输入:</p><p>termux-chroot<br>即可模拟root环境<br>在这个proot环境下面,相当于是进入了home目录,可以很方便地进行一些配置.</p><p>在管理员身份下，输入exit可回到普通用户身份。<br>手机已经root<br>安装tsu,这是一个su的termux版本,用来在termux上替代su:</p><p>Bash<br>pkg install tsu<br>然后终端下面输入:</p><p>tsu<br>即可切换root用户,这个时候会弹出root授权提示,给予其root权限,效果图如下:</p><p>在管理员身份下，输入exit可回到普通用户身份。<br>信息安全<br>因为termux可以很好的支持Python,所以几乎所有用Python编写的安全工具都是可以完美的运行使用的. 总的来说可玩性还是比较高的.</p><p>Metasploit<br>安装Ｍetasploit</p><p>目前Termux官方的pkg已经支持直接安装Metasploit了，通过如下两条命令即可安装，下载过程大约1分钟左右（当然国光我是挂代理的），安装一些相关的依赖包大约10分钟左右：</p><p>Bash<br>pkg install unstable-repo<br>pkg install metasploit</p><p>最新的MSF5版本已经有cve-2019-0708的exploit了</p><p>Nmap<br>端口扫描必备工具</p><p>Bash<br>pkg install nmap</p><p>hydra<br>Hydra是著名的黑客组织THC的一款开源暴力破解工具这是一个验证性质的工具，主要目的是：展示安全研究人员从远程获取一个系统认证权限。</p><p>Bash<br>pkg install hydra</p><p>sslscan<br>SSLscan主要探测基于ssl的服务，如https。SSLscan是一款探测目标服务器所支持的SSL加密算法工具。<br>SSlscan的代码托管在Github</p><p>Bash<br>pkg install sslscan</p><p>whatportis<br>whatportis是一款可以通过服务查询默认端口，或者是通过端口查询默认服务的工具，简单易用。在渗透测试过程中，如果需要查询某个端口绑定什么服务器，或者某个应用绑定的默认端口，可以使用whatportis查询。</p><p>pip2 install whatportis</p><p>SQLmap<br>SQLmap是一款用来检测与利用SQL注入漏洞的免费开源工具 官方项目地址</p><p>直接git clone源码</p><p>git clone <a href="https://github.com/sqlmapproject/sqlmap.git" target="_blank" rel="noopener">https://github.com/sqlmapproject/sqlmap.git</a><br>cd sqlmap<br>python2 sqlmap.py<br>sqlmap支持pip安装了,所以建议直接 pip install sqlmap 来进行安装,然后终端下直接sqlmap就可以了,十分方便.</p><p>RouterSploit<br>RouteSploit框架是一款开源的路由器等嵌入式设备漏洞检测及利用框架。</p><p>Bash<br>pip2 install requests<br>git clone <a href="https://github.com/reverse-shell/routersploit" target="_blank" rel="noopener">https://github.com/reverse-shell/routersploit</a><br>cd routersploit<br>python2 rsf.py</p><p>Slowloris<br>低带宽的DoS工具</p><p>git clone <a href="https://github.com/gkbrk/slowloris.git" target="_blank" rel="noopener">https://github.com/gkbrk/slowloris.git</a><br>cd slowloris<br>chmod +x slowloris.py</p><p>RED_HAWK<br>一款采用PHP语言开发的多合一型渗透测试工具，它可以帮助我们完成信息采集、SQL漏洞扫描和资源爬取等任务。</p><p>Bash<br>pkg install php<br>git clone <a href="https://github.com/Tuhinshubhra/RED_HAWK.git" target="_blank" rel="noopener">https://github.com/Tuhinshubhra/RED_HAWK.git</a><br>cd RED_HAWK<br>php rhawk.php</p><p>Cupp<br>Cupp是一款用Python语言写成的可交互性的字典生成脚本。尤其适合社会工程学，当你收集到目标的具体信息后，你就可以通过这个工具来智能化生成关于目标的字典。</p><p>git clone <a href="https://github.com/Mebus/cupp.git" target="_blank" rel="noopener">https://github.com/Mebus/cupp.git</a><br>cd cupp<br>python2 cupp.py</p><p>Hash-Buster<br>Hash Buster是一个用python编写的在线破解Hash的脚本，官方说5秒内破解,速度实际测试还不错哦~</p><p>git clone <a href="https://github.com/UltimateHackers/Hash-Buster.git" target="_blank" rel="noopener">https://github.com/UltimateHackers/Hash-Buster.git</a><br>cd Hash-Buster<br>python2 hash.py</p><p>D-TECT<br>D-TECT是一个用Python编写的先进的渗透测试工具,</p><p>wordpress用户名枚举<br>敏感文件检测<br>子域名爆破<br>端口扫描<br>Wordperss扫描<br>XSS扫描<br>SQL注入扫描等<br>git clone <a href="https://github.com/shawarkhanethicalhacker/D-TECT.git" target="_blank" rel="noopener">https://github.com/shawarkhanethicalhacker/D-TECT.git</a><br>cd D-TECT<br>python2 d-tect.py</p><p>WPSeku<br>WPSeku 是一个用 Python 写的简单的 WordPress 漏洞扫描器，它可以被用来扫描本地以及远程安装的 WordPress 来找出安全问题。被评为2017年最受欢迎的十大开源黑客工具.</p><p>Bash<br>git clone <a href="https://github.com/m4ll0k/WPSeku.git" target="_blank" rel="noopener">https://github.com/m4ll0k/WPSeku.git</a><br>cd WPSeku<br>pip3 install -r requirements.txt<br>python3 wpseku.py</p><p>XSStrike<br>XSStrike是一种先进的XSS检测工具。它具有强大的模糊测试引擎.</p><p>Bash<br>git clone <a href="https://github.com/UltimateHackers/XSStrike.git" target="_blank" rel="noopener">https://github.com/UltimateHackers/XSStrike.git</a><br>cd XSStrike<br>pip2 install -r requirements.txt<br>python2 xsstrike</p><p>小结<br>因为Termux完美的支持Python和Perl等语言,所以有太多优秀的信息安全工具值得大家去发现了,这里我就不一一列举了.</p><p>Python环境部署<br>安装python2.7<br>Bash<br>pkg install python2<br>安装完成后,使用python2命令启动python 2.7.14环境.</p><p>安装python3<br>pkg install python<br>安装完成后,使用python命令启动python 3.6.5环境.</p><p>升级pip版本<br>Bash<br>python2 -m pip install –upgrade pip<br>python -m pip install –upgrade pip<br>这两条命令分别升级了pip2和pip3到最新版.<br>pip版本查看</p><p>ipython<br>ipython是一个python的交互式shell，支持变量自动补全，自动缩进，支持bash shell命令，内置了许多很有用的功能和函数。学习ipython将会让我们以一种更高的效率来使用python。<br>先安装clang,否则直接使用pip安装ipython会失败报错.</p><p>pkg install clang<br>pip install ipython<br>pip3.6 install ipython<br>然后分别使用ipython和ipython2进入py2和py3控制台:</p><p>编辑器<br>终端下有vim神器,并且官方也已经封装了vim-python,对vim进行了Python相关的优化.</p><p>Bash<br>pkg install vim-python<br>解决termux下的vim汉字乱码</p><p>在家目录下,新建.vimrc文件</p><p>Bash<br>vim .vimrc<br>添加内容如下:</p><p>set fileencodings=utf-8,gb2312,gb18030,gbk,ucs-bom,cp936,latin1<br>set enc=utf8<br>set fencs=utf8,gbk,gb2312,gb18030<br>然后source下变量:</p><p>Bash<br>source .vimrc<br>效果图</p><p>nodejs<br>安装nodejs<br>Bash<br>pkg install nodejs<br>安装比较方便,但是在安装的时候报错了</p><p>Cannot read property ‘length’ of undefined<br>查了下是这边版本的问题</p><p>官方的解决方法如下<br>disable concurrency in case of libuv/libuv#1459</p><p>解决npm安装报错<br>Bash<br>vim $PREFIX/lib/node_modules/npm/node_modules/worker-farm/lib/farm.js<br>我这里修改length的是4,这个好像和CPU有关,总之这里的length得指定一个数字.</p><p>然后在重新安装下npm install hexo-cli -g成功.<br>MariaDB(MySQL)安装<br>MariaDB数据库管理系统是MySQL的一个分支，主要由开源社区在维护，采用GPL授权许可。开发这个分支的原因之一是：甲骨文公司收购了MySQL后，有将MySQL闭源的潜在风险，因此社区采用分支的方式来避开这个风险。</p><p>安装mariadb<br>Bash<br>pkg install mariadb<br>安装基本数据<br>Bash<br>mysql_install_db<br>启动mariadb服务<br>Bash<br>mysqld<br>启动完成后,这个会话就一直存活,类似与debug调试一样,只有新建会话才可以操作.</p><p>关于隐藏会话可以使用nohup命令和tmux命令,这里我建议使用tmux命令<br>新建termux会话<br>由于mariadb安装的时候没有设置密码,当前的mariadb密码为空.</p><p>mysql<br>直接进入mariadb数据库.输入exit退出数据库.</p><p>修改密码<br>输入一下命令,进行密码相关的安全设置:</p><p>Bash<br>mysql_secure_installation<br>输入当前输入密码<br>因为是空密码,这里默认 回车</p><p>Bash<br>Enter current password for root (enter for none):<br>设置新密码<br>这里设置新的root密码</p><p>Bash<br>Set root password? [Y/n] y<br>New password:<br>Re-enter new password:<br>其他设置<br>下面根据个人偏好来进行设置,没有绝对的要求</p><p>Bash<br>Remove anonymous users? [Y/n] Y                #是否移除匿名用户<br>Disallow root login remotely? [Y/n] n          #是否不允许root远程登录<br>Remove test database and access to it? [Y/n] n #是否移除test数据库<br>Reload privilege tables now? [Y/n] y           #是否重新加载表的权限<br>使用密码登录数据库<br>Mysql<br>$ mysql -uroot -p<br>Enter password: ***apache2</p><p>tmux<br>Tmux是一个优秀的终端复用软件，类似GNU Screen，但来自于OpenBSD，采用BSD授权。一旦你熟悉了 tmux 后， 它就像一个加速器一样加速你的工作效率。</p><p>安装tmux<br>Bash<br>pkg install tmux<br>新建mysql会话<br>上面介绍的mysqld后会一直卡在那里,强迫症表示接受不了,重启手机,现在尝试使用tmux来管理会话.</p><p>Bash<br>tmux new -s mysql<br>可以看到最下面的提示,表明现在是在mysql的会话下面操作</p><p>启动mysqld并断开会话<br>启动mysqld</p><p>Bash<br>mysqld<br>让会话后台运行<br>使用快捷键组合Ctrl+b + d，三次按键就可以断开当前会话。</p><p>使用mysql<br>现在那个mysqld会话被放在后台运行了,整个界面看上去很简介,使用</p><p>Bash<br>mysql -uroot -p<br>可以优雅的使用数据库了.<br>效果图</p><p>关于tmux更多进阶的用法这里不在过多介绍了.<br>php<br>termux封装的php版本是php 7.2.5</p><p>安装PHP<br>Bash<br>pkg install php<br>查看下版本</p><p>自PHP5.4之后 PHP内置了一个Web 服务器,来在termux下尝试下PHP Web Server的简单使.</p><p>编写测试文件<br>在家目录下建一个www文件夹:mkdir www<br>在www文件夹下新建一个index.php文件,其内容为</p><p>Php<br><?php phpinfo();?></p><p>启动WebServer<br>php -S 127.0.0.1:8080 -t www/<br>浏览器访问效果如下:</p><p>nginx<br>Nginx 是一个高性能的 Web 和反向代理服务器, 它具有有很多非常优越的特性.</p><p>安装nginx包<br>Bash<br>pkg install nginx<br>切换root用户<br>尝试下能不能解析默认的index.html主页<br>这个文件在termux上的默认位置为/data/data/com.termux/files/usr/share/nginx/html/index.html<br>切换root用户</p><p>默认的普通权限无法启动nginx,需要模拟root权限才可以</p><p>没有这个命令的话,手动安装pkg install proot包</p><p>termux-chroot<br>进入模拟的root环境</p><p>启动nginx<br>在模拟的root环境下启动nginx</p><p>nginx<br>termux上nginx默认的端口是8080<br>查看下8080端口是否在运行</p><p>Bash<br>netstat -an |grep 8080</p><p>然后手机本地直接访问:<a href="http://127.0.0.1:8080" target="_blank" rel="noopener">http://127.0.0.1:8080</a> 查看下nginx是否正常启动.<br>效果图</p><p>这样一个默认的nginx服务就起来了,但是意义不大,得配置一下可以解析php才会有更大的意义.<br>停止nginx服务<br>这里是直接杀掉占用端口的进程,具体端口以实际情况为准.</p><p>Bash<br>fuser -k 8080/tcp<br>重启nginx服务<br>nginx -s reload<br>网站搭建<br>nginx解析PHP<br>nginx解析PHP这里单独拿出一级标题来叙述,成功解析的话,下面安装wordpress等cms就会轻松很多.<br>nginx本身不能处理PHP，它只是个web服务器，当接收到php请求后发给php解释器处理,nginx一般是把请求发fastcgi管理进程处理,PHP-FPM是一个PHP FastCGI管理器,所以这里得先安装php-fpm.</p><p>这里默已经安装了nginx和php,没有安装的话,使用pkg install php nginx来进行安装,参考上面部分进行配置</p><p>安装并配置php-fpm<br>安装php-fpm</p><p>Bash<br>pkg install php-fpm<br>配置php-fpm<br>进入proot环境,然后编辑配置文件<a href="http://www.conf(先进proot可以更方便操作编写相关配置文件)" target="_blank" rel="noopener">www.conf(先进proot可以更方便操作编写相关配置文件)</a></p><p>Bash<br>termux-chroot<br>vim /etc/php-fpm.d/<a href="http://www.conf" target="_blank" rel="noopener">www.conf</a><br>定位搜索listen找到</p><p>listen = /data/data/com.termux/files/usr/var/run/php-fpm.sock<br>将其改为</p><p>listen = 127.0.0.1:9000<br>配置nginx<br>在proot环境下,然后编辑配置文件nginx.conf</p><p>vim /etc/nginx/nginx.conf<br>下面给出已经配置好的模板文件,直接编辑替换整个文件即可:</p><p>Bash</p><p>worker_processes  1;<br>events {<br>    worker_connections  1024;<br>}</p><p>http {<br>    include       mime.types;<br>    default_type  application/octet-stream;<br>    sendfile        on;<br>    keepalive_timeout  65;</p><pre><code>server {    listen       8080;    server_name  localhost;    root   /data/data/com.termux/files/usr/share/nginx/html;    index  index.html index.htm;    error_page   500 502 503 504  /50x.html;    location = /50x.html {        root   /data/data/com.termux/files/usr/share/nginx/html;    }    location ~ \.php$ {        root           html;        fastcgi_pass   127.0.0.1:9000;        fastcgi_index  index.php;        fastcgi_param  SCRIPT_FILENAME  /usr/share/nginx/html$fastcgi_script_name;        include        fastcgi_params;    }}</code></pre><p>}<br>里面的网站默认路径就是nginx默认的网站根目录:</p><p>Bash<br>root   /data/data/com.termux/files/usr/share/nginx/html;<br>fastcgi_param  SCRIPT_FILENAME  /usr/share/nginx/html$fastcgi_script_name;<br>要修改网站默认路径的话,只需要修改这两处即可.</p><p>建立php测试文件<br>在/usr/share/nginx/html目录下新建一个phpinfo.php文件,其内容是:<?php phpinfo();?></p><p>went<br>启动php-fpm和nginx<br>在proot环境下面分别启动php-fpm和nginx,这里的nginx不在proot环境下启动后会出一些问题,感兴趣的可以自己去研究看看.</p><p>Bash<br>php-fpm<br>nginx<br>浏览器访问测试<br>浏览器访问<a href="http://127.0.0.1:8080/phpinfo.php" target="_blank" rel="noopener">http://127.0.0.1:8080/phpinfo.php</a> 查询php文件是否解析了.</p><p>搭建WordPress<br>这里只是用wordpress做个典型安利来讲解,类似地可以安装Discuz,DeDecms等国内主流的PHP应用程序.</p><p>方法一 使用PHP内置的Web Server<br>确保安装并配置了php和mariadb,没有安装好的话,参考本文中具体细节部分来进行安装.<br>新建数据库</p><p>*** 这里是mysql的密码</p><p>Sql<br>mysql -uroot -p*** -e”create database wordpress;show databases;”<br>下载解压wordpress</p><p>Bash<br>wget <a href="https://cn.wordpress.org/wordpress-4.9.4-zh_CN.zip" target="_blank" rel="noopener">https://cn.wordpress.org/wordpress-4.9.4-zh_CN.zip</a><br>pkg install unzip<br>unzip wordpress-4.9.4-zh_CN.zip<br>启动PHP Web Server<br>到解压后的wordpress目录下,执行</p><p>Bash<br>cd wordpress<br>php -S 127.0.0.1:8080<br>然后浏览器访问127.0.0.1:8080开始进行wordperss的安装.<br>效果图</p><p>方法二 nginx+PHP+Mariadb<br>上面使用的方法一是直接使用PHP自带的PHP Web Server来运行的,看上去不够严谨~,所以这里用nginx来部署wordpress.<br>确保安装了PHP,php-fpm,mariadb,没有安装的话,参考本文中具体细节部分来进行安装和配置.<br>新建数据和wordpress下载参考上面的方法一,这里主要介绍使用nginx去解析wordpress源文件.<br>当前解压后wordpress的绝对路径是:</p><p>Bash<br>/data/data/com.termux/files/home/wordpress<br>编辑nginx.conf</p><p>Bash<br>vim /etc/nginx/nginx.conf<br>修改为如下几处:</p><p>root   /data/data/com.termux/files/home/wordpress;<br>        index  index.html index.htm index.php;</p><p>fastcgi_param  SCRIPT_FILENAME  /data/data/com.termux/files/home/wordpress$fastcgi_script_name;</p><p>启动php-fpm和nginx<br>在proot环境下面分别启动php-fpm和nginx,这里的nginx不在proot环境下启动后会出一些问题,感兴趣的可以自己去研究看看.<br>Bash<br>php-fpm<br>nginx<br>安装wordpress<br>浏览器访问:<a href="http://127.0.0.1:8080/wp-admin/setup-config.php进行安装" target="_blank" rel="noopener">http://127.0.0.1:8080/wp-admin/setup-config.php进行安装</a>.<br>效果图</p><p>同理安装其他博客也就轻而易举了,可玩性大大增加~<br>搭建hexo博客<br>安装hexo<br>npm install hexo-cli -g<br>部署hexo博客环境<br>然后建立一个目录,然后到这个目录下初始化hexo环境</p><p>mkdir hexoblog  #手动创建一个目录<br>cd hexoblog<br>hexo init   #初始化hexo环境<br>hexo g      #生成静态文件<br>hexo s      #启动hexo</p><p>然后就跑起来一个最基本的hexo博客<br>关于hexo博客的详细教程,建议搭建去参考hexo官方文档,我这里重点在于 termux 其他的不作过多的叙述.<br>效果图</p><p>SSH<br>Termux ssh 连接电脑<br>有时候要操作电脑,这个时候有了termux,躺在床上就可以操作电脑了,岂不是美滋滋~~<br>安装openssh</p><p>Bash<br>pkg install openssh<br>然后就可以直接ssh连接你的电脑了</p><p>前提是电脑安装了ssh服务</p><p>Bash<br>$ ssh <a href="mailto:sqlsec@192.168.1.8" target="_blank" rel="noopener">sqlsec@192.168.1.8</a><br>手机连接操作电脑效果图:</p><p>电脑ssh连接Termux<br>emmm 这个需求比较鸡肋,但是写文字嘛就得写全了~</p><p>安装openssh</p><p>同样也需要openssh才可以</p><p>pkg install openssh<br>启动sshd</p><p>安装完成后,sshd服务默认没有启动,所以得手动启动下:</p><p>sshd<br>因为手机上面低的端口有安全限制,所以这里的openssh默认的sshd默认的服务是8022端口上的.<br>ssh的用户名用whoami命令看下.</p><p>可以看到sshd启动后,端口才可以看到.<br>PC端生成公钥</p><p>ssh登录是key公钥模式登录,首先在PC端生成秘钥:</p><p>Bash<br>sqlsec@ubuntu:-&gt; ssh-keygen -t rsa<br>执行完成后，会在家目录下创建3个文件<br>id_rsa, id_rsa.pub , known_hosts</p><p>拷贝公钥到手机</p><p>然后把公钥id_rsa.pub拷贝到手机的data\data\com.termux\files\home.ssh文件夹中.</p><p>将公钥拷贝到验证文件中</p><p>在Termux下操作</p><p>Bash<br>cat id_rsa.pub &gt; authorized_keys</p><p>PC端连接手机termux</p><p>Bash<br>sqlsec@ubuntu-&gt; ssh -p8022 <a href="mailto:u0_a119@192.168.1.3" target="_blank" rel="noopener">u0_a119@192.168.1.3</a><br>效果图</p><p>pc端连接手机termux 真心鸡肋呀~(忍不住自己吐槽下自己)<br>下载<br>使用Aria2打造自己的下载工具<br>Aria2是一个轻量级多协议和多源命令行下载实用工具。它支持 HTTP / HTTPS, FTP, SFTP, bt 和 Metalink。通过内置 Aria2 可以操作 json - rpc 和 xml - rpc。配置好的话还可以高速下载百度云文件.</p><p>安装aria2<br>pkg install aria2<br>本地启动服务<br>Bash<br>aria2c –enable-rpc –rpc-listen-all<br>这个rpc服务默认监听的是6800端口,启动后方便下面的Web界面连接操作.</p><p>webui-aria2<br>这是个Aria2的热门项目,把Aria2封装在了Web平台,操作起来更加简单便捷。</p><p>git clone <a href="https://github.com/ziahamza/webui-aria2.git" target="_blank" rel="noopener">https://github.com/ziahamza/webui-aria2.git</a><br>cd webui-aria2<br>node node-server.js<br>需要node来运行,没有安装的 话使用pkg install nodejs来安装</p><p>使用效果图 ,速度蛮快的 ,有兴趣的可以研究如何利用aria2来下载百度云文件,等你们来探索.</p><p>文件分享<br>KodExplorer<br>参考我的这篇文章：<a href="https://www.sqlsec.com/2019/11/kode.html" target="_blank" rel="noopener">https://www.sqlsec.com/2019/11/kode.html</a></p><p>既然macOS可以直接搭建的话，那用Termux搭建的话应该也很简单吧：</p><p>Bash</p><h1 id="git-clone-下载最新源码"><a href="#git-clone-下载最新源码" class="headerlink" title="git clone 下载最新源码"></a>git clone 下载最新源码</h1><p>git clone <a href="https://github.com/kalcaddle/KodExplorer/" target="_blank" rel="noopener">https://github.com/kalcaddle/KodExplorer/</a></p><h1 id="到项目目录下"><a href="#到项目目录下" class="headerlink" title="到项目目录下"></a>到项目目录下</h1><p>cd KodExplorer</p><h1 id="启动php内置的WebServer"><a href="#启动php内置的WebServer" class="headerlink" title="启动php内置的WebServer"></a>启动php内置的WebServer</h1><p>php -S 127.0.0.1:8080 -t .<br>git clone 国内网速可能比较慢 速度慢话 自行去官网找直链然后wget下载 速度会快很多</p><p>然后手机浏览器访问: <a href="http://127.0.0.1:8080" target="_blank" rel="noopener">http://127.0.0.1:8080</a> 设置一下账号密码即可使用</p><p>实际体验还是很不错的，下面是主界面截图：</p><p>当然在局域网的情况下，通过IP地址，局域网的其他设备也是可以轻松访问到你的文件的，文件共享目的达成。</p><p>Termux-api<br>Termux:API，用于访问手机硬件,实现更多的可玩性,可以实现如下等功能:</p><p>访问电池信息<br>获取相机设备信息<br>获取本机设备信息<br>获取设置剪贴板信息<br>获取通讯录信息<br>获取设置手机短信<br>拨打号码<br>振动设备<br>安装Termux-api<br>Termux-api Google Play下载地址</p><p>补充一下链接如何在电脑上下载Google play上的应用？</p><p>安装Termux-api软件包<br>安装完Termux-apiAPP后,Termux里面必须安装对应的包后才可以实现操作手机底层.</p><p>Bash<br>pkg install termux-api<br>下面只列举一些可能会用到的,想要获取更多关于Termux-api的话,那就去参考官方文档.</p><p>获取电池信息<br>Bash<br>termux-battery-status<br>可以看到电池的-健康状况-电量百分比-温度情况等</p><p>Bash<br>{<br>  “health”: “GOOD”,<br>  “percentage”: 67,<br>  “plugged”: “UNPLUGGED”,<br>  “status”: “DISCHARGING”,<br>  “temperature”: 24.600000381469727<br>}<br>获取相机信息<br>Bash<br>termux-camera-info<br>获取与设置剪贴板<br>查看当前剪贴板内容</p><p>termux-clipboard-get<br>设置新的剪贴板内容</p><p>termux-clipboard-set PHP是世界上最好的语言<br>效果演示</p><p>获取通讯录列表<br>Bash<br>termux-contact-list</p><p>查看短信内容列表<br>Bash<br>termux-sms-inbox</p><p>发送短信<br>termux-sms-send<br>支持同时发送多个号码,实现群发的效果,官方介绍如下:</p><p>termux-sms-send -n number(s)  recipient number(s) - separate multiple numbers by commas<br>发送测试</p><p>Bash<br>termux-sms-send -n 10001 cxll</p><p>拨打电话<br>Bash<br>termux-telephony-call<br>拨打电话给10001中国电信,查看下话费有没有欠费~?</p><p>termux-telephony-call 10001</p><p>WiFi相关<br>获取当前WiFi连接信息</p><p>Bash<br>termux-wifi-connectioninfo<br>获取最近一次WiFi扫描信息</p><p>Bash<br>termux-wifi-scaninfo</p><p>小结<br>直接操作调动系统底层的话,可以通过编程来实现自动定时短信发送,语音播报等 DIY空间无线</p><p>一些无聊的尝试<br>一些无聊有趣的版块,如果你是一个正经讲究人,可以跳过这个板块以节约你的阅读时间.</p><p>nyancat 彩虹猫<br>彩虹貓（英语：Nyan Cat）是在2011年4月上传在Youtube 的视频，并且迅速爆红于网络，並在2011年YouTube浏览量最高的视频中排名第五.</p><p>Bash<br>pkg install nyancat<br>nyancat</p><p>什么鬼完全Get不到国外人的趣味点</p><p>终端二维码<br>Linux 命令行下的二维码,主要核心是这个网址:<a href="http://qrenco.de/" target="_blank" rel="noopener">http://qrenco.de/</a></p><p>Bash<br>echo “<a href="http://www.sqlsec.com&quot;" target="_blank" rel="noopener">http://www.sqlsec.com&quot;</a> |curl -F-=&lt;- qrenco.de</p><p>如果你不嫌无聊的话还可以扫描这个二维码,然后就打开我的博客了.<br>终端地图<br>一个基于nodejs编写的命令行下的地图.</p><p>npm install mapscii -g<br>mapscii<br>进入终端地图</p><p>操作方法<br>方向键 移动<br>a和z键 放大缩小<br>q键 退出<br>终端下的地图!讲究人~ 如果你足够无聊的话,还可以尝试能不能在这个地图上找到自己所在的位置.</p><p>其他没有写到的内容<br>安装Linux<br>甚至还可以在Termux里面在安装其他的Linux发行版.</p><p>由于本文篇幅已经过长了,这里不在叙述了,感兴趣,能折腾的自己去找一些资料.下面列出目前网友们用Termux可以成功安装的发行版:</p><p>Ubuntu<br>Arch<br>Fedora<br>Kali Nethunter<br>Ubuntu</p><p>Fedora</p><p>内网穿透<br>使用ngrok或者frp可以将Termux上面搭建的网站映射到外网上去,手机建站也不是不可能了.</p><p>Python Jupyter Notebook<br>Jupyter notebook（又称IPython notebook），支持运行超过40种编程语言。Python的一个强大的模块,成功安装的话可以实现比caddy的效果,支持web下的终端操作,支持代码高亮运行.由于这里需要安装大量文件,加上用户需求比较少,这一块感兴趣的话可以自己去探索.</p><p>下载工具<br>you-get<br>是一款命令行工具，用来下载网页中的视频、音频、图片，支持众多网站，包含 41 家国内主流视频、音乐网站，如 网易云音乐、AB<br>站、百度贴吧、斗鱼、熊猫、爱奇艺、凤凰视频、酷狗音乐、乐视、荔枝FM、秒拍、腾讯视频、优酷土豆、央视网、芒果TV<br>等等，只需一个命令就能直接下载视频、音频以及图片回来，并且可以自动合并视频。而对于有弹幕的网站，比如 B 站，还可以将弹幕下载回来</p><p>BaiduPCS-Go<br>仿 Linux shell 文件处理命令的百度网盘命令行客户端.</p><p>项目地址</p><p>可以完美在Termux上运行.</p><p>总结<br>相对来说 国外的Termux DIY的氛围比国内好很多,Youtube上的视频都有很高的播放量:</p><p>当然国内也有这么一批执着于Termux的玩家,只是相对来说还比较小众,写这篇文章只想让更多的人认识到Termux的生产力,使用Termux来做一些很cool的事情. 期待有更多Termux的优秀文章出现~</p><p>文章原作者: 国光<br>文章链接: <a href="https://www.sqlsec.com/2018/05/termux.html" target="_blank" rel="noopener">https://www.sqlsec.com/2018/05/termux.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Termux 高级终端安装使用配置教程,这篇文章拖了有小半年.因为网上相关的文章相对来说还是比较少的,恰好今天又刷了机,所以就特意来总结一下,希望本文可以帮助到其他的小伙伴.发挥Android平台更大的DIY空间.&lt;br&gt;简介&lt;br&gt;Termux是一个Android下一个高
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>timeFly</title>
    <link href="https://gadore.me/2019/09/20/timeFly/"/>
    <id>https://gadore.me/2019/09/20/timeFly/</id>
    <published>2019-09-20T01:14:33.000Z</published>
    <updated>2019-09-20T01:23:06.560Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="talk" scheme="https://gadore.me/categories/talk/"/>
    
    
  </entry>
  
  <entry>
    <title>从《星际牛仔》中理解渡边信一郎的音乐哲学(转)</title>
    <link href="https://gadore.me/2019/09/17/Cowboy%20Bebop/"/>
    <id>https://gadore.me/2019/09/17/Cowboy Bebop/</id>
    <published>2019-09-17T07:13:06.000Z</published>
    <updated>2019-09-18T09:44:36.882Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://image.gcores.com/a993e370-fd58-4003-992a-788b6151ef07.jpg?x-oss-process=image/resize,limit_1,m_lfit,w_2000,h_2000/quality,q_90" alt="img from gcores"></p><p>原创 天天白话  2018-04-10<br>作者 天天</p><blockquote><p>3、2、1，Let’s Jam！</p></blockquote><p>Tank!（TV stretch）<br>菅野よう子 - 菅野洋子-COWBOY BEBOP TANK THE BEST</p><p>1998年4月3日，《Cowboy Bebop》（星际牛仔）在东京电视台播出，它让渡边信一郎这个离经叛道的天才一跃跻身日本一流导演的行列。对配乐的深刻理解是他最为人称道特点，直到20年后的今天，“动画界最懂音乐的导演”依然非渡边信一郎莫属。<br><img src="https://image.gcores.com/67e0e6a4-10a5-4dae-bbb9-6ca9ebb671fe.png?x-oss-process=image/quality,q_90/watermark,image_d2F0ZXJtYXJrLnBuZw,g_se,x_10,y_10" alt="img from gcores"></p><p>热爱音乐的电影动画导演很多，其中也不乏品位优秀者，但渡边信一郎是特殊的。没有人会像他一样，从音乐而不是故事、人物、思想等等去出发构思整部片子，他可以为了让一段配乐完整的呈现出来而毫不犹豫地修改情节，甚至除了自己的作品，他还经常跑去其他人的动画中担任音响导演。他在音乐上的偏执和狂热，赋予了其作品空前绝后、独一无二的魅力。在他手中，音乐被提到了与画面平行的高度，与色彩运用在一起，利用音乐展现出的情境在镜头语言的配合下产生了对冲，又进一步刺激了视觉效果，而他对音乐风格的独特选择使得音乐成为了其叙事抒情的另一个手段。他以音乐为主轴，通过人物的对白、场景的设计和色彩的把握，塑造了一个个渡边信一郎专属的世界。</p><p>今天，笔者就从《Cowboy Bebop》出发，与大家聊聊渡边信一郎，和他的音乐哲学。<br><img src="https://image.gcores.com/bbffc802-2862-4ba6-9752-43b30e067a88.jpg?x-oss-process=image/quality,q_90/watermark,image_d2F0ZXJtYXJrLnBuZw,g_se,x_10,y_10" alt="img from gcores"></p><h2 id="音乐狂人渡边信一郎"><a href="#音乐狂人渡边信一郎" class="headerlink" title="音乐狂人渡边信一郎"></a>音乐狂人渡边信一郎</h2><p>日本动漫导演中，渡边信一郎是绝对的异类：他从不屑于去创作大众向长篇漫改作品，因此标签化的“日漫”爱好者很难听说他的名字，但他又没有足够的耐心像押井守、大友克洋一般用鸿篇巨制去探讨严肃深刻的命题，所以他也不算业界承先启后的大佬。渡边信一郎优秀的作品都是“玩票”气质的，天才而随性，充满了极端个人主义色彩。<br><img src="https://image.gcores.com/7f6b5a38-5d24-4cb8-9baa-7f60722bcef9.jpg?x-oss-process=image/quality,q_90/watermark,image_d2F0ZXJtYXJrLnBuZw,g_se,x_10,y_10" alt="img from gcores"></p><p>1985年，20岁的渡边信一郎进入业界巨头SUNRISE。一开始只是打杂，直到1991年担任《高达0083》的单集监督，日升才注意到这个才华横溢但恣意随性的年轻人。1994年的《MARCROSS PLUS》是他的导演处女作（与河森正治共同执导），彼时，渡边信一郎结识了日后对他整个事业起了相当重要作用的作曲家菅野洋子。菅野洋子在此之前一直在为广告与游戏配乐，《MP》是她第一次完整地参与动漫配乐，但是渡边信一郎发现了她的音乐才华，并初步展示了他对配乐的超然理解，动漫和配乐都大获成功。</p><p>有了这次合作的基础，2年后的1997年，《MARCROSS PLUS》的原班人马制作了载入史册的神作《Cowboy Bebop》。渡边信一郎从西部电影、黑色电影和香港动作电影等处汲取灵感，打造了一部充满王家卫式浪漫的“太空公路片”。宽松的制片方、天才编剧信本敬子的故事、以及后藤雅巳等强大的作画阵容，最大限度地成全了渡边信一郎万花筒般绚烂的脑洞、电影化的影像语言和看似散乱实则聚拢在“Bebop”精神下的叙事结构。而菅野洋子为《CB》贡献的音乐则是这部“反传统”之作中最引人注目的，音乐风格横跨蓝调、爵士、乡村、金属、朋克、民谣、桑巴甚至非洲音乐，如此庞杂的音乐出自同一人之手就足以让人惊叹，但菅野甚至还可以把握到各种音乐风格的精髓。为录制配乐，汇集欧美日本一票神级演奏家的临时大乐队“The Seatbelts”保证了音乐的高质量。而渡边信一郎将它们应用更是突破了“背景音乐”的定义，或在行云流水的动作戏中让人大呼过瘾，或在激烈的对抗戏使用安静抒情启发观众发现画面之下隐藏的情感气氛。</p><h3 id="◆-为了《Cowboy-Bebop》的录制，菅野洋子领衔组织了“超级乐队”The-Seatbelts，乐队成员都是今堀恒雄、本田雅人这样响当当的大人物，他们的精彩发挥是《CB》高质量配乐不可或缺的一环。"><a href="#◆-为了《Cowboy-Bebop》的录制，菅野洋子领衔组织了“超级乐队”The-Seatbelts，乐队成员都是今堀恒雄、本田雅人这样响当当的大人物，他们的精彩发挥是《CB》高质量配乐不可或缺的一环。" class="headerlink" title="◆ 为了《Cowboy Bebop》的录制，菅野洋子领衔组织了“超级乐队”The Seatbelts，乐队成员都是今堀恒雄、本田雅人这样响当当的大人物，他们的精彩发挥是《CB》高质量配乐不可或缺的一环。"></a>◆ 为了《Cowboy Bebop》的录制，菅野洋子领衔组织了“超级乐队”The Seatbelts，乐队成员都是今堀恒雄、本田雅人这样响当当的大人物，他们的精彩发挥是《CB》高质量配乐不可或缺的一环。</h3><p>此后的作品中，渡边信一郎依旧贯彻着《Cowboy Bebop》中的音乐哲学，不过音乐题材的范围更加广泛，应用也更加出人意料：《Samurai Champloo》（混沌武士）中使用嘻哈音乐去呈现江户时代武士的故事；《Baby Blue》中肖邦“离别”成了全篇的精华；《东京残响》中用凛冽清冷的冰岛风映射恐袭少年的内心世界；《坂道上的阿波罗》中经典爵士乐穿插在少年情愫中；《Space Dandy》中狂欢节一般的宇宙大杂烩……<br><img src="https://image.gcores.com/d615ee5a-1f91-45dd-9459-2b0f85eb52d2.jpg?x-oss-process=image/quality,q_90/watermark,image_d2F0ZXJtYXJrLnBuZw,g_se,x_10,y_10" alt="img from gcores"><br>渡边信一郎从未受过音乐专业训练，他敏锐的音乐嗅觉与诡谲的音乐品味是在日常中培养的。从少年起他就几乎每时每刻都在听音乐，工作时也不例外。他经常以听音乐时的想象为根据去搭场景画分镜，甚至就围绕这一想象去构建整个故事。虽然他对音乐的理解不逊于绝大多数音乐人，但他从来不亲自涉足创作，而是邀请他喜欢的音乐人让其自由发挥，再从音乐出发去修改动画的构思甚至成品。而他也总能慧眼发现独特的音乐人，与他们碰撞出耀眼的火花：除了“菅野&amp;渡边”这对黄金组合，Nujabes等四位当时名不见经传的DJ为《Samurai Champloo》贡献的嘻哈音乐让日式Jazz-Hiphop威名远扬；《Space Dandy》中聚齐了向井秀德（from Number Girl）、Taku Takahashi（from m-flo）、Kenken（from RIZE）等业界大佬；最新短片《银翼杀手2022》中甚至邀请了将爵士技巧融入迷幻电子的美国音乐人Flying Lotus。透过渡边独一无二的工作方式，我们就可以对他的音乐哲学略知一二。</p><p>下面，笔者将从几个角度切入，简单谈谈他对于音乐的独特理解。</p><h2 id="由表及里的“音乐电影”"><a href="#由表及里的“音乐电影”" class="headerlink" title="由表及里的“音乐电影”"></a>由表及里的“音乐电影”</h2><p> “音乐电影”的名号自渡边信一郎出名起就一直伴随着他，但实际上他所有作品中以音乐为内容题材的只有一部《坂道上的阿波罗》。所以“音乐电影”这个词放到渡边身上，并不是说他喜好制作《歌舞青春》一般的音乐片，而是他的作品中，音乐的风格内容与作品内容表达有着全方位的、由表及里的统一。</p><p>从名字上看《Cowboy Bebop》似乎是一部以Bebop爵士乐为主的动画，但全片的配乐中，Bebop爵士乐只占其中的少部分。“Bebop”在这部剧中是一种精神，它统领着故事的叙述方式和主角的人生态度。关于这一点，渡边信一郎在动画衍生漫画的卷首中作了说明：</p><blockquote><p>“很久以前，在1941年的纽约哈林区，有一家叫做Minton’s酒吧。不设限的舞台欢迎任何人上台一展所长，因此吸引了众多年轻的爵士乐手们齐集此处，以乐会友。这些年轻的灵魂厌倦了传统爵士的陈词滥调，最终创造出了一种全新的风格，以抒发自己不羁的本色……在2071年的茫茫星海之中，同样有一群赏金猎人集聚在‘Bebop’号飞船上，内心向往自由、不惧任何危险。他们将会推陈出新，为我们带来前所未见的梦幻般的视觉体验。而这部开创了全新风格的影片，也将因此得名……《Cowboy Bebop》。”</p></blockquote><p>在Bebop音乐中，合奏过一段主旋律过后，演奏者会抛开固定的旋律，仅保留和声框架，逐一进行即兴演奏。这种自由的框架也揭示了《Cowboy Bebop》中的叙事结构：26集的动画中只有少数几集主线故事，其余的都是看似毫不相关的内容，自由写意，但万变不离其宗，这些枝杈上的故事都在为最后的结局做气氛和情绪上的铺垫。</p><p>不仅是片头，TV动画每集的名称都是在致敬某首经典歌曲或者某种音乐风格，比如第5集《Ballad of Fallen Angels》致敬了Aerosmith的歌曲《Fallen Angels》；第8集《Waltz for Venus》则致敬了爵士钢琴大师Bill Evans的名曲《Waltz for Debby》；第14集《Bohemian Rhapsody》则直接引用了Queen的同名经典。如此命名的意义远远不止于音乐爱好者导演在形式上的玩梗，片名音乐的风格和内容，揭示了每集故事中蕴含的内核情感。</p><p>My Funny Valentine<br>Chet Baker - Let’s Get Lost: The Best Of Chet Baker Sings</p><p>第15集《My Funny Valentine》中，女主角Faye Valentine阴差阳错下重新面对了一段尘封往事。本集的片名直接引用了早逝的爵士浪子Chet Baker最经典的《My Funny Valentine》，歌曲中，Chet Baker在略带阴郁悲伤的曲调下，用低沉慵懒的声音吟唱着温暖炽热的赞美与爱意，这与本篇的基调相一致：当Faye得知那个在她最迷茫无助时主动前来帮助她的男人，那个她所依赖仰仗并希望托付余生的白马王子、竟然是一个婚姻诈骗惯犯的以后，愤怒、无奈，但时隔多年，心中却始终难以抹去自己曾付出过的爱意。这时《My Funny Valentine》除了曲名，也像Faye Valentine在嘲笑那个落得如此命运的自己。</p><p>Flying Teapot<br>菅野よう子 - Cowboy Bebop Original OST3 BLUE</p><h3 id="◆-Faye的回忆中，无论男人的欺骗多么可憎，当时心动的感觉始终是甜美的。"><a href="#◆-Faye的回忆中，无论男人的欺骗多么可憎，当时心动的感觉始终是甜美的。" class="headerlink" title="◆ Faye的回忆中，无论男人的欺骗多么可憎，当时心动的感觉始终是甜美的。"></a>◆ Faye的回忆中，无论男人的欺骗多么可憎，当时心动的感觉始终是甜美的。</h3><p> <img src="https://image.gcores.com/02203956-1d62-48db-9fff-665ee29e88d2.gif" alt="img from gcores"><br>但她万万没想到Bebop上的伙伴竟偶然抓到了当年卷钱跑路的男人。再次见面，千般情绪涌上Faye的心头，除了愤怒，她还想向男人确认，这一切到底是不是彻头彻尾的欺骗，他是不是真的对她毫无感情，而影片的最后，男人终于给出了真心的答案：</p><p>虽然一切都是有计划的阴谋，但是他也确实在一瞬间爱上了熟睡中的她。</p><p>虽是作戏一场，但也曾经心动。这时候《My Funny Valentine》除了字面意思，曲中悲伤又柔情的曲调，像极了剧中所呈现的，让人至爱至恨的双面人生。</p><p>在《Cowboy Bebop》中，音乐既是装饰，也是核心。这种用音乐风格及音乐内容来统领作品内核精神的做法，绝无他人能达到渡边信一郎的高度。在渡边的其他作品中这样的做法也非常常见，甚至在2004年的《Samurai Champloo》（混沌武士）中，嘻哈音乐不仅仅是从暗处统领全局，甚至以诸如刮碟+转场、黑胶+片头等等方式，在作品表现形式上形成了统一。</p><h2 id="作为“指挥”的音乐与动作场景"><a href="#作为“指挥”的音乐与动作场景" class="headerlink" title="作为“指挥”的音乐与动作场景"></a>作为“指挥”的音乐与动作场景</h2><p>行云流水的打戏是渡边信一郎的标志之一。他的动作戏不同于一般日本动漫“镜头动人不动”并大量局部定格特写的“省事”处理，而是不惜耗费巨大精力刻画流畅的人物动作，并且设计出切合人物性格背景的动作特征，让打戏看上去就像真人拍摄的动作电影，但又有真人电影没有的夸张和潇洒。而渡边为动作戏选配的音乐多为快速激烈的音乐，并且根据音乐节奏和乐句变化切换镜头，让动作与音乐高度融为一体。<br>这种高超的动作戏配乐技巧在《Cowboy Bebop》第一集，男主角Spike与逃犯Asimov打斗的场景戏中就有所体现：随着一声枪响，大乐队爵士曲“N.Y Rush” 登场，一串飞速流转的鼓点之后贝司进入，四小节的前奏中，镜头以小节为分界点在Spike和Asimov间切换以揭示二人招式的不同风格——spike灵巧迅捷的截拳道和Asimov“嗑药”后的野兽猛攻，由管乐齐奏的飘逸张扬的主旋律象征着Spike在轻松潇洒中形成绝对压制。整场动作戏的节奏和乐曲一致，快速，流畅，攻防转换和出招拆招毫不拖泥带水。</p><p>N.Y. Rush<br>菅野よう子 - Cowboy Bebop Original OST3 BLUE</p><p><img src="https://image.gcores.com/c03676b8-ba24-4701-806e-8a6ee0c3d9f3.gif?x-oss-process=image/resize,limit_1,m_lfit,w_700,h_2000" alt="img from gcores"><br>而在2001年《Cowboy Bebop》的剧场版《Knockin’ on the heaven’s door》（天国之扉）中，120分钟的剧场版可以允许渡边摆脱20分钟剧集的时长限制，放开手脚设计了一段二维动画史上最伟大的空战（勉强之一）——动画中Spike驾驶着他的老式飞机Swordfish与三架军机遭遇，面对多人追击，武器装备处于完全下风的他利用高超的驾驶技术上演了一出惊天反杀：</p><h3 id="◆-原画师后藤雅巳等人完全通过手绘制作了这段强大的“板野马戏”（由板野一郎发明的一种描绘大量导弹空中无差别攻击的作画手法），夸张，刺激，令人叹服。"><a href="#◆-原画师后藤雅巳等人完全通过手绘制作了这段强大的“板野马戏”（由板野一郎发明的一种描绘大量导弹空中无差别攻击的作画手法），夸张，刺激，令人叹服。" class="headerlink" title="◆ 原画师后藤雅巳等人完全通过手绘制作了这段强大的“板野马戏”（由板野一郎发明的一种描绘大量导弹空中无差别攻击的作画手法），夸张，刺激，令人叹服。"></a>◆ 原画师后藤雅巳等人完全通过手绘制作了这段强大的“板野马戏”（由板野一郎发明的一种描绘大量导弹空中无差别攻击的作画手法），夸张，刺激，令人叹服。</h3><p>What planet is this<br>菅野よう子 - COWBOY BEBOP Knockin’on heaven’s door O.S.T. FUTURE BLUES</p><p>它的背景音乐“What planet is this ?!”依旧是一段大乐队爵士曲，但比起上文提到的“Rush”更加快速激情，电贝司、电吉他以及人声“号子”的加入更是增添了恣意张扬，与Spike的炫技式驾驶相得益彰。日本“Fusion Jazz之神”本田雅人的萨克斯即兴solo，配合Spike躲避高速跟踪导弹，闪转腾挪都带风一般。后半部分管乐的高声齐奏和底部跳跃的贝司solo把这场空战推向了高潮。</p><p>总之，在渡边信一郎的动作戏中，音乐是作为“指挥”出现的，它用音乐节奏来带动场景节奏，用乐句的变化引领镜头和动作的转换。将这独一无二手法应用在二维动画中，除了高于一般动画导演的理解之外，还要有足够的偏执和耐心才行——毕竟不用做到这个程度也可以产出优秀作品。但是谁让渡边信一郎就是这般极端的人呢？</p><p>反向思维下，透过画面的音乐表现力</p><p>一般电影中，音乐都是从正向去烘托场景气氛和人物情感的，悲伤时就用舒缓的小调，振奋时则是慷慨激昂进行曲，然而，有时候将看上去完全不搭调的音乐和场景结合在一起，反而能够擦出意想不到的火花。电影史上，库布里克大师是这一哲学的开创者之一，《2001太空漫游》中那段《蓝色多瑙河》令无数影迷印象深刻，其中就有我们今天的主角渡边信一郎。</p><p>渡边信一郎不止在一个场合谈起过《2001太空漫游》对他的影响，内核上，场景上，还有音乐上。他甚至在《Cowboy Bebop》第11集的结尾直接致敬了那段《蓝色多瑙河》托起的太空史诗，只不过音乐换成了柴可夫斯基的《花之圆舞曲》（值得一提的是，《CB》第11集整集都是对《异形》的致敬）库布里克的音乐哲学——用反向思维搭配音乐和场景，从而揭示画面之下的情绪和思想——被渡边信一郎在他的动画中广泛应用，并加以引申。</p><p>Valse des fleurs<br>Berliner Philharmoniker - 50 Mother’s Day Classics (By Classic FM)</p><h3 id="◆-《CB》11集末尾，在太空中旋转起舞的冰箱和失重炫富的主角"><a href="#◆-《CB》11集末尾，在太空中旋转起舞的冰箱和失重炫富的主角" class="headerlink" title="◆ 《CB》11集末尾，在太空中旋转起舞的冰箱和失重炫富的主角"></a>◆ 《CB》11集末尾，在太空中旋转起舞的冰箱和失重炫富的主角</h3><p> <img src="https://image.gcores.com/af6e313e-a04d-4606-bcd7-1e4a8c302818.jpg?x-oss-process=image/resize,limit_1,m_lfit,w_700,h_2000/quality,q_90/watermark,image_d2F0ZXJtYXJrLnBuZw,g_se,x_10,y_10" alt="img from gcores"><br>《Cowboy Bebop》第10集中渡边信一郎就做了一段非常“反向”的音乐安排。阴差阳错中，主角一行人来到木卫三，男二号Jet 前去拜访了曾不辞而别的前女友Alisa，试图了解那段被封存的记忆里，女友不辞而别的原因。而命运给似乎给他们开了个玩笑，Alisa的现男友Rhint杀人在逃且被通缉悬赏，送走Jet后，为了安抚恐慌的男友，Alisa在决定与他一起亡命天涯，而Jet出门后才从别处了解情况。或许是希望亲手了结这段尘封的心结，前警察、现赏金猎人Jet毅然驾驶飞机追逐Alisa逃亡的快艇。</p><p>于是我们看到这样的场景：飞驰的快艇与穷追不舍的飞船划破平静的海面，镜头给到Rhint恐慌的表情，Jet深情而感慨的眼神，以及Alisa在是否举枪向旧情人间犹豫不决的手。而与这段快速追逐的绝望场景相配的，是一段平静优美的吉他独奏与人声吟唱。<br> <img src="https://image.gcores.com/2dc99d86-827d-4b0d-8ae5-061c048a79ac.jpg?x-oss-process=image/resize,limit_1,m_lfit,w_700,h_2000/quality,q_90/watermark,image_d2F0ZXJtYXJrLnBuZw,g_se,x_10,y_10" alt="img from gcores"></p><p>Elm<br>菅野よう子 - COWBOY BEBOP SOUNDTRACK 2 No Disc</p><p>如果只是在这里看我形容，我相信大家很难将这段平静如水，甚至幽静甜美的演唱与一段追船戏联系起来。但正是这段音乐与场景的巨大反差，让我们的关注点从那个残酷绝望的场景，投进Jet的内心世界。</p><p>Jet温柔、重情、细腻，但这也成了他与Alisa裂痕的原点。并不是所有女人都享受洋娃娃一样的生活，她也会寻找自己的价值，想要决定自己的人生，对Alisa来说，与其和无比正确的Jet在一起，反倒不如和一个经常犯错的人相伴，至少自己有了活着的感觉。<br><img src="https://image.gcores.com/46199ef9-71c9-4e18-a64c-01afc29c483f.jpg?x-oss-process=image/resize,limit_1,m_lfit,w_700,h_2000/quality,q_90/watermark,image_d2F0ZXJtYXJrLnBuZw,g_se,x_10,y_10" alt="img from gcores"><br>◆ 我很想替我自己决定生活方式，就算做错了。</p><p>于是这段温柔细腻的《ELM》似乎成了对Jet的一种嘲讽：他在感情中尽心尽力，但无论如何也不会想到，就是他的温柔把二人的关系逼到如此不堪的境地，我相信在Alisa出走后，Jet一定无数次反思自己到底做错了什么，但是唯有真实存在的那个，不是靠他改进就能解决的，何其荒诞，但又无比合理。在天上看着仓皇脱逃的Alisa和Rhint二人，虽然Jet表情始终如一，但这段音乐告诉了我们他心中的温情、不解和无力。</p><p>渡边信一郎非常善于采用这种手法，去展现难以从画面中直接透出，甚至难以言说的复杂情感，也引导观众去关注画面表现中难以强调的细节。当然渡边无数音画结合的典范之作中，最经典的还属《Samurai Champloo》第14集中长达5分钟的奄美岛呗托起的坠海蒙太奇，已有无数专业人士给出专业分析，再次不做赘述。</p><p>新奇迷幻的异域情结</p><p>渡边的异域情结对一些老粉丝来说并不新鲜，毕竟在创作《Cowboy Bebop》时，他就有了去西部牛仔的发源地德克萨斯实地考察的想法。虽然由于日升社不给报销，最终只能拿着旅游杂志上的照片疯狂脑补，但是他确实在作品中采用了很多异域元素来制造耳目一新的感觉，在音乐上也是如此——在《Cowboy Bebop》中，印度、非洲、南美音乐的元素频繁出现并与爵士、摇滚乐相融合，也亏是菅野洋子可以把那么多世界音乐模仿的有模有样。</p><p>提到西方音乐中的异域元素，嬉皮士运动是绕不开的话题。“垮掉的一代”经常将东方音乐元素用到摇滚、金属和爵士乐中，对他们来说，东方音乐代表着神秘，代表着他们服用LSD后看到的扑朔迷离的世界。而《Cowboy Bebop》第14集中，Spike和Faye前去抓捕Chess master hex时，那个废弃的飞船就好像是60年代嬉皮士们的温柔乡：</p><p>かぶとがに 古代の魚<br>菅野よう子 - COWGIRL ED O.S.T</p><p>这里的配乐“かぶとがに 古代の鱼”，渡边依旧让乐声高过了对话音效，突出这段印度风格的曲目。塔布拉鼓、西塔琴配合标志性的印度音阶奏出悠扬而神秘的旋律，诡异的一幕幕场景快速闪过：空中漫步的喵汪，头顶艳红的苹果、眼睛闪光的蝙蝠、四处散落的垃圾、盆中种植的大麻还有烟雾缭绕中神志不清的宇宙嬉皮士……随着Spike与Faye在迷宫般的飞船中不断穿梭，曲目渐渐加快，观众的心跳也在加快，直到二人破门进入Hex的房间前，大锣响起——“咣”！这才将观众猛地从“起飞”中惊醒。</p><p><img src="https://image.gcores.com/699a63b4-d0d9-4c3b-b97e-d0219bbb7bea.jpg?x-oss-process=image/resize,limit_1,m_lfit,w_700,h_2000/quality,q_90/watermark,image_d2F0ZXJtYXJrLnBuZw,g_se,x_10,y_10" alt="img from gcores"><br>◆ 震惊！史上最早薛之谦粉丝出现！中国人都看哭了！</p><p>而到了2000年制作剧场版《Knockin’ on the heaven’s door》时，出国考察这个愿望终于成真了：由于一个“阿拉伯式氛围”的想法，他选择了摩洛哥。回来后他打造了古朴而带有一丝迷幻气息的“阿路巴市”街景，为了和这段场景搭配，他选定了一种同样带有迷幻色彩的当地音乐——Gnawa。<br><img src="https://image.gcores.com/e72e589f-5504-4775-89f8-291555582b74.png?x-oss-process=image/resize,limit_1,m_lfit,w_700,h_2000/quality,q_90/watermark,image_d2F0ZXJtYXJrLnBuZw,g_se,x_10,y_10" alt="img from gcores"><br>作为一种由北非原始部族通灵音乐进化来的Gnawa，自上世纪60年代起被欧美嬉皮士们称作“Trance Music”（迷幻音乐）而受到追捧，Jimi Hendrix、Led Zeppelin等音乐家都曾邀请过Gnawa艺人合作。这种音乐以呓语般的唱腔和不断重复的乐句，持续给听者以梦幻般的音乐暗示，从而达到让人神志恍惚的境地。</p><p>《Knockin’ on the heaven’s door》中，菅野洋子等人请到了Gnawa艺人Hassan Bohmide，与他们一起贡献了三首Gnawa风味的爵士曲目：</p><p>MUSAWE<br>菅野よう子 - COWBOY BEBOP Knockin’on heaven’s door O.S.T. FUTURE BLUES</p><p>Hamduche<br>菅野よう子 - COWBOY BEBOP Knockin’on heaven’s door OST SEATBELTS Ask DNA</p><p>No Money<br>菅野よう子 - SPACE BIO CHARGE</p><p>“MUSAWE”中，Hassan Bohmide弹起Gnawa标志性乐器gimbri，重复“催眠”的吟唱与萨克斯水乳交融，加入了钢琴的“Hamduche”则更加扑朔迷离，而“no money” 中Hassan Bohmide蹩脚的英语让这曲子又惨又好笑。</p><p>前文我们提到过渡边信一郎经常先听到音乐，再根据听音乐的想象构建整个故事。考虑到《Knockin’ on the heaven’s door》故事的核心线索就和“迷幻”有关，会不会整个剧本，就是渡边听Gnawa听high了的产物呢？</p><h3 id="◆-提到Gnawa与爵士乐的结合就不能不提Pharoah-Sanders，他与“Gnawa之王”Mahmoud-Guinia的合作绝对经典，有兴趣的朋友们可以去搜下。"><a href="#◆-提到Gnawa与爵士乐的结合就不能不提Pharoah-Sanders，他与“Gnawa之王”Mahmoud-Guinia的合作绝对经典，有兴趣的朋友们可以去搜下。" class="headerlink" title="◆ 提到Gnawa与爵士乐的结合就不能不提Pharoah Sanders，他与“Gnawa之王”Mahmoud Guinia的合作绝对经典，有兴趣的朋友们可以去搜下。"></a>◆ 提到Gnawa与爵士乐的结合就不能不提Pharoah Sanders，他与“Gnawa之王”Mahmoud Guinia的合作绝对经典，有兴趣的朋友们可以去搜下。</h3><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>今年是《Cowboy Bebop》播出的20周年。20年过去了，从未有人成功地效仿渡边信一郎，也从未有人肯像他一样在背景音乐这种“装饰品”上耗费如此大的精力，而渡边信一郎自己也从不住在功劳簿上，他永远在不断创新，不断进步，但无论题材变化、受众变化，他的音乐哲学一直是贯穿在作品中的。在他的作品中，音乐与剧情永远是双主角，无间配合，互相升华。</p><p>Adieu<br>菅野よう子 - Cowboy Bebop Original OST3 BLUE</p><p>不久前，渡边信一郎的新动画企划《CAROL &amp; TUESDAY》公布了，这将是一部以New Age音乐为主基调，展现少女间友谊的“小清新”故事。让我们祝愿渡边导演工作顺利，期待明年4月作品播出吧~<br><img src="https://image.gcores.com/ca2f4d2c-3626-403e-849c-aafd6e3a10ec.gif?x-oss-process=image/resize,limit_1,m_lfit,w_700,h_2000" alt="img from gcores"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://image.gcores.com/a993e370-fd58-4003-992a-788b6151ef07.jpg?x-oss-process=image/resize,limit_1,m_lfit,w_2000,h_2000/quali
      
    
    </summary>
    
    
      <category term="animation" scheme="https://gadore.me/categories/animation/"/>
    
    
  </entry>
  
  <entry>
    <title>There is the title</title>
    <link href="https://gadore.me/2019/09/15/hello-world/"/>
    <id>https://gadore.me/2019/09/15/hello-world/</id>
    <published>2019-09-15T07:13:06.000Z</published>
    <updated>2019-10-09T08:52:07.973Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
      <category term="learn" scheme="https://gadore.me/categories/learn/"/>
    
    
  </entry>
  
</feed>
